<?xml version="1.0" encoding="UTF-8"?>
<!--

    add Livecode to gEdit for highlighting code

-->
<language id="livecode" _name="Livecode" version="2.0" _section="Scripts">
  <metadata>
    <property name="mimetypes">text/livecode;application/lc;text/rev;application/x-lc-source</property>
    <property name="globs">*.lc;*.rev;*.phtml</property>
    <property name="line-comment-start">#</property>
    <property name="line-comment-start">--</property>
    <property name="block-comment-start">/*</property>
    <property name="block-comment-end">*/</property>
  </metadata>

  <styles>
    <style id="comment" _name="Comment" map-to="def:comment"/>
    <style id="error" _name="Error" map-to="def:error"/>
    <style id="variable" _name="Variable" map-to="def:identifier"/>
    <style id="identifier" _name="Identifier"/> <!-- map to nothing -->
    <style id="escape" _name="Escaped Character" map-to="def:special-char"/>
    <style id="string" _name="String" map-to="def:string"/>
    <style id="here-doc" _name="Heredoc" map-to="def:string"/>
    <style id="here-doc-bound" _name="Heredoc Bound" map-to="def:keyword"/>
    <style id="keyword" _name="Keyword" map-to="def:keyword"/>
    <style id="common-function" _name="Common Function" map-to="def:keyword"/>
    <style id="operator" _name="Operator" map-to="def:operator"/>
    <style id="type" _name="Data Type" map-to="def:type"/>
    <style id="null-value" _name="Null Value" map-to="def:special-constant"/>
    <style id="boolean" _name="Boolean value" map-to="def:boolean"/>
    <style id="floating-point" _name="Floating point number" map-to="def:floating-point"/>
    <style id="decimal" _name="Decimal number" map-to="def:decimal"/>
    <style id="octal" _name="Octal number" map-to="def:base-n-integer"/>
    <style id="hexadecimal" _name="Hexadecimal number" map-to="def:base-n-integer"/>
  </styles>

  <definitions>

    <context id="bash-line-comment" style-ref="comment" end-at-line-end="true" extend-parent="false" class="comment" class-disabled="no-spell-check">
      <start>#</start>
      <include>
        <context ref="def:in-line-comment"/>
      </include>
    </context>

    <context id="lc-line-comment" style-ref="comment" end-at-line-end="true" extend-parent="false" class="comment" class-disabled="no-spell-check">
      <start>--</start>
      <include>
        <context ref="def:in-line-comment"/>
      </include>
    </context>

    <context id="cpp-line-comment" style-ref="comment" end-at-line-end="true" extend-parent="false" class="comment" class-disabled="no-spell-check">
      <start>//</start>
      <include>
        <context ref="def:in-line-comment"/>
      </include>
    </context>

    <context id="c-block-comment" style-ref="comment" class="comment" class-disabled="no-spell-check">
      <start>/\*</start>
      <end>\*/</end>
      <include>
        <context ref="def:in-line-comment"/>
      </include>
    </context>

    <context id="close-comment-outside-comment" style-ref="error">
      <match>\*/(?!\*)</match>
    </context>

    <context id="escape" style-ref="escape">
      <match>\\((\\|"|n|t|\$|r)|[0-7]{1,3}|x[0-9a-fA-F]{1,2})</match>
    </context>

    <context id="variable" style-ref="variable">
      <match>[$]+[a-zA-Z_][a-zA-Z0-9_]*</match>
    </context>

    <context id="array-operators" style-ref="variable">
      <match>(\[|\])</match>
    </context>


    <context id="string-var">
      <include>
        <context ref="variable"/>
        <context id="curly-var" style-ref="variable" >
          <start>{(?=\$)</start>
          <end>}</end>
          <include>
            <context ref="string-var"/>
          </include>
        </context>
        <context id="backwards-curly-var" style-ref="variable">
          <start>\${</start>
          <end>}</end>
          <include>
            <context ref="string-var"/>
          </include>
        </context>
      </include>
    </context>

    <context id="double-quoted-string" style-ref="string" class="string" class-disabled="no-spell-check">
      <start>"</start>
      <end>"</end>
      <include>
        <context ref="escape"/>
        <context ref="string-var"/>
        <context ref="def:line-continue"/>
      </include>
    </context>

    <context id="single-quoted-string" style-ref="string" class="string" class-disabled="no-spell-check">
      <start>'</start>
      <end>'</end>
      <include>
        <context style-ref="def:special-char">
          <match>\\['\\]</match>
        </context>
        <context ref="def:line-continue"/>
      </include>
    </context>

    <context id="backtick-string" style-ref="string" extend-parent="false">
      <start>`</start>
      <end>`</end>
      <include>
        <context ref="escape"/>
        <context ref="def:line-continue"/>
      </include>
    </context>

    <context id="here-doc-string" style-ref="here-doc" extend-parent="true">
      <start>(&lt;&lt;&lt;)\s?([a-zA-Z_][a-zA-Z0-9_]*)</start>
      <end>^(\%{2@start});?$</end>
      <include>
        <context sub-pattern="0" where="start" style-ref="here-doc-bound"/>
        <context sub-pattern="1" where="end" style-ref="here-doc-bound"/>
        <context ref="escape"/>
        <context ref="string-var"/>
        <context ref="def:line-continue"/>
      </include>
    </context>

    <context id="now-doc-string" style-ref="here-doc" extend-parent="true">
      <start>(&lt;&lt;&lt;)\s?'([a-zA-Z_][a-zA-Z0-9_]*)'</start>
      <end>^(\%{2@start});?$</end>
      <include>
        <context sub-pattern="0" where="start" style-ref="here-doc-bound"/>
        <context sub-pattern="1" where="end" style-ref="here-doc-bound"/>
        <context style-ref="def:special-char">
          <match>\\['\\]</match>
        </context>
        <context ref="def:line-continue"/>
      </include>
    </context>

    <context id="identifier" style-ref="identifier">
      <match>[a-zA-Z_][a-zA-Z0-9_]*</match>
    </context>

    <context id="keywords" style-ref="keyword">
      <keyword>abstract</keyword>
      <keyword>and</keyword>
      <keyword>as</keyword>
      <keyword>break</keyword>
      <keyword>case</keyword>
      <keyword>catch</keyword>
      <keyword>class</keyword>
      <keyword>clone</keyword>
      <keyword>const</keyword>
      <keyword>continue</keyword>
      <keyword>declare</keyword>
      <keyword>default</keyword>
      <keyword>die</keyword>
      <keyword>do</keyword>
      <keyword>echo</keyword>
      <keyword>else</keyword>
      <keyword>elseif</keyword>
      <keyword>empty</keyword>
      <keyword>enddeclare</keyword>
      <keyword>endfor</keyword>
      <keyword>endforeach</keyword>
      <keyword>endif</keyword>
      <keyword>endswitch</keyword>
      <keyword>endwhile</keyword>
      <keyword>eval</keyword>
      <keyword>exit</keyword>
      <keyword>extends</keyword>
      <keyword>final</keyword>
      <keyword>finally</keyword>
      <keyword>for</keyword>
      <keyword>foreach</keyword>
      <keyword>function</keyword>
      <keyword>global</keyword>
      <keyword>goto</keyword>
      <keyword>if</keyword>
      <keyword>implements</keyword>
      <keyword>include</keyword>
      <keyword>include_once</keyword>
      <keyword>instanceof</keyword>
      <keyword>insteadof</keyword>
      <keyword>interface</keyword>
      <keyword>isset</keyword>
      <keyword>list</keyword>
      <keyword>namespace</keyword>
      <keyword>new</keyword>
      <keyword>or</keyword>
      <keyword>print</keyword>
      <keyword>private</keyword>
      <keyword>protected</keyword>
      <keyword>public</keyword>
      <keyword>require</keyword>
      <keyword>require_once</keyword>
      <keyword>return</keyword>
      <keyword>static</keyword>
      <keyword>switch</keyword>
      <keyword>throw</keyword>
      <keyword>trait</keyword>
      <keyword>try</keyword>
      <keyword>unset</keyword>
      <keyword>use</keyword>
      <keyword>var</keyword>
      <keyword>while</keyword>
      <keyword>xor</keyword>
      <keyword>yield</keyword>
 <!-- livecode stuff   -->
	<keyword>accept</keyword>
	<keyword>add</keyword>
	<keyword>answer</keyword>
	<keyword>ask</keyword>
	<keyword>assert</keyword>
	<keyword>beep</keyword>
	<keyword>break</keyword>
	<keyword>breakpoint</keyword>
	<keyword>call</keyword>
	<keyword>cancel</keyword>
	<keyword>case</keyword>
	<keyword>catch</keyword>
	<keyword>choose</keyword>
	<keyword>clear</keyword>
	<keyword>click</keyword>
	<keyword>clone</keyword>
	<keyword>close</keyword>
	<keyword>combine</keyword>
	<keyword>command</keyword>
	<keyword>compact</keyword>
	<keyword>constant</keyword>
	<keyword>convert</keyword>
	<keyword>copy</keyword>
	<keyword>create</keyword>
	<keyword>crop</keyword>
	<keyword>cut</keyword>
	<keyword>debugdo</keyword>
	<keyword>decrypt</keyword>
	<keyword>default</keyword>
	<keyword>define</keyword>
	<keyword>dehilite</keyword>
	<keyword>delete</keyword>
	<keyword>disable</keyword>
	<keyword>dispatch</keyword>
	<keyword>divide</keyword>
	<keyword>do</keyword>
	<keyword>domenu</keyword>
	<keyword>drag</keyword>
	<keyword>drawer</keyword>
	<keyword>edit</keyword>
	<keyword>else</keyword>
	<keyword>enable</keyword>
	<keyword>encrypt</keyword>
	<keyword>end</keyword>
	<keyword>exit</keyword>
	<keyword>export</keyword>
	<keyword>filter</keyword>
	<keyword>finally</keyword>
	<keyword>find</keyword>
	<keyword>flip</keyword>
	<keyword>focus</keyword>
	<keyword>function</keyword>
	<keyword>get</keyword>
	<keyword>getprop</keyword>
	<keyword>global</keyword>
	<keyword>go</keyword>
	<keyword>grab</keyword>
	<keyword>group</keyword>
	<keyword>hide</keyword>
	<keyword>hilite</keyword>
	<keyword>if</keyword>
	<keyword>import</keyword>
	<keyword>include</keyword>
	<keyword>insert</keyword>
	<keyword>intersect</keyword>
	<keyword>kill</keyword>
	<keyword>launch</keyword>
	<keyword>library</keyword>
	<keyword>load</keyword>
	<keyword>local</keyword>
	<keyword>lock</keyword>
	<keyword>mark</keyword>
	<keyword>modal</keyword>
	<keyword>modeless</keyword>
	<keyword>move</keyword>
	<keyword>multiply</keyword>
	<keyword>new</keyword>
	<keyword>next</keyword>
	<keyword>on</keyword>
	<keyword>open</keyword>
	<keyword>option</keyword>
	<keyword>palette</keyword>
	<keyword>pass</keyword>
	<keyword>paste</keyword>
	<keyword>place</keyword>
	<keyword>play</keyword>
	<keyword>pop</keyword>
	<keyword>popup</keyword>
	<keyword>post</keyword>
	<keyword>prepare</keyword>
	<keyword>print</keyword>
	<keyword>private</keyword>
	<keyword>pulldown</keyword>
	<keyword>push</keyword>
	<keyword>put</keyword>
	<keyword>quit</keyword>
	<keyword>read</keyword>
	<keyword>record</keyword>
	<keyword>redo</keyword>
	<keyword>relayer</keyword>
	<keyword>release</keyword>
	<keyword>remove</keyword>
	<keyword>rename</keyword>
	<keyword>repeat</keyword>
	<keyword>replace</keyword>
	<keyword>reply</keyword>
	<keyword>request</keyword>
	<keyword>require</keyword>
	<keyword>reset</keyword>
	<keyword>resolve</keyword>
	<keyword>return</keyword>
	<keyword>revert</keyword>
	<keyword>rotate</keyword>
	<keyword>save</keyword>
	<keyword>secure</keyword>
	<keyword>seek</keyword>
	<keyword>select</keyword>
	<keyword>send</keyword>
	<keyword>set</keyword>
	<keyword>setprop</keyword>
	<keyword>sheet</keyword>
	<keyword>show</keyword>
	<keyword>sort</keyword>
	<keyword>split</keyword>
	<keyword>start</keyword>
	<keyword>stop</keyword>
	<keyword>subtract</keyword>
	<keyword>switch</keyword>
	<keyword>then</keyword>
	<keyword>throw</keyword>
	<keyword>toplevel</keyword>
	<keyword>try</keyword>
	<keyword>type</keyword>
	<keyword>undefine</keyword>
	<keyword>undo</keyword>
	<keyword>ungroup</keyword>
	<keyword>unhilite</keyword>
	<keyword>union</keyword>
	<keyword>unload</keyword>
	<keyword>unlock</keyword>
	<keyword>unmark</keyword>
	<keyword>visual</keyword>
	<keyword>wait</keyword>
	<keyword>write</keyword>
    </context>

    <context id="common-function" style-ref="keyword">
      <keyword>doubleval</keyword>
      <keyword>floatval</keyword>
      <keyword>gettype</keyword>
      <keyword>intval</keyword>
      <keyword>print_r</keyword>
      <keyword>serialize</keyword>
      <keyword>settype</keyword>
      <keyword>strval</keyword>
      <keyword>unserialize</keyword>
      <keyword>var_dump</keyword>
      <keyword>var_export</keyword>
    </context>


  
    <context id="type" style-ref="type">
      <keyword>array</keyword>
      <keyword>bool</keyword>
      <keyword>boolean</keyword>
      <keyword>callable</keyword>
      <keyword>double</keyword>
      <keyword>float</keyword>
      <keyword>int</keyword>
      <keyword>integer</keyword>
      <keyword>numeric</keyword>
      <keyword>object</keyword>
      <keyword>resource</keyword>
      <keyword>string</keyword>
      <keyword>unset</keyword>
 	<!-- livecode stuff   -->
	<keyword>and</keyword>
	<keyword>begins with</keyword>
	<keyword>bitAnd</keyword>
	<keyword>bitNot</keyword>
	<keyword>bitOr</keyword>
	<keyword>bitXor</keyword>
	<keyword>contains</keyword>
	<keyword>div</keyword>
	<keyword>ends with</keyword>
	<keyword>is a</keyword>
	<keyword>is among</keyword>
	<keyword>is among the keys of</keyword>
	<keyword>is in</keyword>
	<keyword>is not</keyword>
	<keyword>is not a</keyword>
	<keyword>is not among</keyword>
	<keyword>is not among the keys of</keyword>
	<keyword>is not in</keyword>
	<keyword>is not within</keyword>
	<keyword>is within</keyword>
	<keyword>mod</keyword>
	<keyword>not</keyword>
	<keyword>or</keyword>
	<keyword>there is a</keyword>
	<keyword>there is no</keyword>
	<keyword>wrap</keyword>
	<keyword>each</keyword>
	<keyword>for</keyword>
	<keyword>forever</keyword>
	<keyword>step</keyword>
	<keyword>until</keyword>
	<keyword>while</keyword>
	<keyword>with</keyword>
	<keyword>into</keyword>
	<keyword>after</keyword>
	<keyword>before</keyword>
	<keyword>line</keyword>
	<keyword>lines</keyword>
	<keyword>item</keyword>
	<keyword>items</keyword>
	<keyword>word</keyword>
	<keyword>words</keyword>
	<keyword>char</keyword>
	<keyword>chars</keyword>
	<keyword>byte</keyword>
	<keyword>bytes</keyword>
    </context>

    <context id="operators" style-ref="operator" extend-parent="false">
      <match>[-.~^@,;:/%|\=\+\*\!\?&amp;&lt;&gt;()]</match>
    </context>

  

    <context id="null-value" style-ref="null-value">
      <prefix>(?i)\b</prefix> <!-- case insensitive -->
      <keyword>null</keyword>
	<!-- livecode stuff -->
	<keyword>arrow</keyword>
	<keyword>backslash</keyword>
	<keyword>busy</keyword>
	<keyword>colon</keyword>
	<keyword>comma</keyword>
	<keyword>CRLF</keyword>
	<keyword>cross</keyword>
	<keyword>done</keyword>
	<keyword>down</keyword>
	<keyword>eight</keyword>
	<keyword>empty</keyword>
	<keyword>EOF</keyword>
	<keyword>false</keyword>
	<keyword>five</keyword>
	<keyword>formfeed</keyword>
	<keyword>four</keyword>
	<keyword>hand</keyword>
	<keyword>help</keyword>
	<keyword>iBeam</keyword>
	<keyword>left</keyword>
	<keyword>nine</keyword>
	<keyword>null</keyword>
	<keyword>one</keyword>
	<keyword>pi</keyword>
	<keyword>plus</keyword>
	<keyword>quote</keyword>
	<keyword>return</keyword>
	<keyword>right</keyword>
	<keyword>scrollbarFactor</keyword>
	<keyword>seven</keyword>
	<keyword>six</keyword>
	<keyword>slash</keyword>
	<keyword>space</keyword>
	<keyword>tab</keyword>
	<keyword>ten</keyword>
	<keyword>three</keyword>
	<keyword>true</keyword>
	<keyword>two</keyword>
	<keyword>up</keyword>
	<keyword>watch</keyword>
	<keyword>zero</keyword>

    </context>

    <context id="boolean" style-ref="boolean">
      <prefix>(?i)\b</prefix> <!-- case insensitive -->
      <keyword>false</keyword>
      <keyword>true</keyword>
    </context>

    <context id="float" style-ref="floating-point">
      <match extended="true">
        (?&lt;![\w\.])
        ([0-9]+[Ee][+-]?[0-9]+ |
         ([0-9]*\.[0-9]+ | [0-9]+\.[0-9]*)([Ee][+-]?[0-9]+)?)
        (?![\w\.])
      </match>
    </context>

    <context id="decimal-number" style-ref="decimal">
      <match extended="true">
        (?&lt;![\w\.])
        [+-]?([1-9][0-9]*|0)
        (?![\w\.])
      </match>
    </context>

    <context id="octal-number" style-ref="octal">
      <match extended="true">
        (?&lt;![\w\.])
        [+-]?0[0-7]+
        (?![\w\.])
      </match>
    </context>

    <context id="hexadecimal-number" style-ref="hexadecimal">
      <match extended="true">
        (?&lt;![\w\.])
        [+-]?0x[0-9a-fA-F]+
        (?![\w\.])
      </match>
    </context>

    <context id="livecode-block">
      <start>&lt;([?](lc|rev)?)</start>
      <end>[?]&gt;</end>
      <include>
        <context sub-pattern="0" where="start" style-ref="keyword"/>
        <context sub-pattern="0" where="end" style-ref="keyword"/>
        <context ref="cpp-line-comment"/>
        <context ref="bash-line-comment"/>
        <context ref="lc-line-comment"/>
        <context ref="c-block-comment"/>
        <context ref="double-quoted-string"/>
        <context ref="single-quoted-string"/>
        <context ref="backtick-string"/>
        <context ref="here-doc-string"/>
        <context ref="now-doc-string"/>
        <context ref="variable"/>
        <context ref="array-operators"/>
        <context ref="keywords"/>
        <context ref="operators"/>
        <context ref="type"/>
        <context ref="null-value"/>
        <context ref="boolean"/>
        <context ref="float"/>
        <context ref="decimal-number"/>
        <context ref="octal-number"/>
        <context ref="hexadecimal-number"/>
	<context ref="identifier"/>
      </include>
    </context>

    <replace id="html:embedded-lang-hook" ref="livecode-block"/>

    <context id="livecode" class="no-spell-check">
      <include>
        <context ref="livecode-block"/>
        <context ref="html:html"/>
      </include>
    </context>

  </definitions>
</language>
